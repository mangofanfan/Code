import{_ as t,C as s,c as l,o as p,aA as r,G as e}from"./chunks/framework.BPt_yMNM.js";const _=JSON.parse('{"title":"执行","description":"","frontmatter":{},"headers":[],"relativePath":"c/run.md","filePath":"c/run.md","lastUpdated":1747502523000}'),o={name:"c/run.md"};function c(h,a,d,k,u,m){const i=s("NolebaseGitContributors"),n=s("NolebaseGitChangelog");return p(),l("div",null,[a[0]||(a[0]=r(`<h1 id="执行" tabindex="-1">执行 <a class="header-anchor" href="#执行" aria-label="Permalink to &quot;执行&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">文档结构提醒</p><p>「安装」与「执行」章节同时出现在C与C++两种语言的教程中，如果你从C++教程中跳转到此，请记得回城哦！</p><p><a href="/cpp/features.html">此处返回C++：语言特性</a></p></div><p>C语言程序需要先编译再运行。本教程不涉及较为底层的编译原理与中间过程。</p><h2 id="编译" tabindex="-1">编译 <a class="header-anchor" href="#编译" aria-label="Permalink to &quot;编译&quot;">​</a></h2><p>如果你对C语言的具体编译过程感兴趣，可以看看以下外部资料：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/558783902" target="_blank" rel="noreferrer">C语言的编译过程详解</a></li></ul><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><p>编译完成后得到可执行文件，执行即运行了C代码。</p><p>对于单源码文件编译成的程序来说，程序的入口是<code>main</code>函数。<code>main</code>函数需要以如下方式定义：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 一些代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>在后面的教程中会涉及到函数的有关概念。<code>main</code>函数是允许没有形参、返回整形类型的函数，其返回值将会作为程序进程结束时的返回值，<code>0</code>表示程序正常结束，任何非<code>0</code>的值都意味着错误。</p>`,11)),e(i),e(n)])}const g=t(o,[["render",c]]);export{_ as __pageData,g as default};
